/**
 ******************************************************************************
 * @file       $(NAMELC).h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @author     Vladimir Ermakov, Copyright (C) 2013.
 * @see        The GNU Public License (GPL) Version 3
 *
 * @note       Object definition file: $(XMLFILE).
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @brief      The UAVUObjects
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */
#ifndef $(NAMEUC)_H
#define $(NAMEUC)_H

#include "uavdataobject.h"
#include "uavobjectmanager.h"

namespace openpilot
{

class $(NAME): public UAVDataObject
{
public:
	// Field structure
	typedef struct {
$(DATAFIELDS)
	} __attribute__((packed)) DataFields;

	// Field information
$(DATAFIELDINFO)

	// Constants
	static const uint32_t OBJID = $(OBJIDHEX);
	static const std::string NAME;
	static const std::string DESCRIPTION;
	static const std::string CATEGORY;
	static const bool ISSINGLEINST = $(ISSINGLEINST);
	static const bool ISSETTINGS = $(ISSETTINGS);
	static const size_t NUMBYTES = sizeof(DataFields);

	// Functions
	$(NAME)();

	DataFields getData();
	void setData(const DataFields& data);
	Metadata getDefaultMetadata();
	UAVDataObject* clone(uint32_t instID);
	UAVDataObject* dirtyClone();

	ssize_t serialization(uint8_t *dataOut);
	ssize_t deserialization(const uint8_t *dataIn);
	std::string toStringData();

	static $(NAME)* GetInstance(UAVObjectManager* objMngr, uint32_t instID = 0);

private:
	DataFields data;

	void setDefaultFieldValues();
};

} // namespace openpilot

#endif // $(NAMEUC)_H
